{"version":3,"file":"main.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,UAAU;AACnF;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,UAAU;AACtF;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,C","sources":["webpack://gulp/../Portfolio/practic-your-bank/babel/main.js"],"sourcesContent":["const burgerBtn = document.querySelector('.burger-btn');\r\nconst menu = document.querySelector('.menu');\r\nconst passwInputs = document.querySelectorAll('.input_password');\r\nconst exchange = document.querySelector('.exchange');\r\nconst tabs = document.querySelectorAll('.tabs');\r\nconst postTabs = document.querySelectorAll('.post-tabs');\r\nconst faq = document.querySelector('.faq');\r\nconst testim = document.querySelector('.testim');\r\n\r\nif (burgerBtn && menu) {\r\n    burgerBtn.addEventListener('click', () => {\r\n        menu.classList.toggle('_active');\r\n        burgerBtn.classList.toggle('_active');\r\n    });\r\n}\r\n\r\npasswInputs.forEach((input) => {\r\n  if (input) {\r\n    const btn = input.querySelector('button');\r\n    const inputEl = input.querySelector('input');\r\n\r\n    btn.addEventListener('click', () => {\r\n      inputEl.type = inputEl.type === 'password' ? 'text' : 'password';\r\n    })\r\n  }\r\n});\r\n\r\nif (exchange) {\r\n  const input = exchange.querySelectorAll('.exchange__input input');\r\n  \r\n  const INR = 31520; // 1 USD = 31520 INR\r\n\r\n  const rounded = (value) => {\r\n    return +value.toFixed(3);\r\n  }\r\n\r\n  input[0].addEventListener('input', (ev) => {\r\n    input[1].value = rounded(input[0].value / INR);\r\n  })\r\n}\r\n\r\ntabs.forEach((tab) => {\r\n  const tabBtns = tab.querySelectorAll('.tabs__btns .btn');\r\n\r\n  tabBtns.forEach((btn, index) => {\r\n    btn.addEventListener('click', ev => {\r\n      if (!btn.classList.contains('_active')) {\r\n        console.log(22);\r\n        \r\n        const activeBtn = tab.querySelector('.tabs__btns .btn._active');\r\n        const activeContent = tab.querySelector('.tabs__content._active');\r\n        \r\n        activeBtn.classList.remove('_active');\r\n        activeContent.classList.remove('_active');\r\n  \r\n        const attribute = btn.getAttribute('data-tab');\r\n        const tabContent = tab.querySelector(`.tabs__content[data-tab=\"${attribute}\"]`);\r\n  \r\n        btn.classList.add('_active');\r\n        tabContent.classList.add('_active');\r\n      }\r\n    });\r\n  })\r\n});\r\n\r\npostTabs.forEach((tab) => {\r\n  const tabBtns = tab.querySelectorAll('.post-tabs__btn');\r\n\r\n  tabBtns.forEach((btn, index) => {\r\n    btn.addEventListener('click', ev => {\r\n      const activeBtn = tab.querySelector('.post-tabs__btn._active');\r\n      const activeContent = tab.querySelector('.post-tabs__content._active');\r\n      \r\n      activeBtn.classList.remove('_active');\r\n      activeContent.classList.remove('_active');\r\n\r\n      const attribute = btn.getAttribute('data-tab');\r\n      const tabContent = tab.querySelector(`.post-tabs__content[data-tab=\"${attribute}\"]`);\r\n\r\n      btn.classList.add('_active');\r\n      tabContent.classList.add('_active');\r\n    });\r\n  })\r\n});\r\n\r\nif (faq) {\r\n  const btn = faq.querySelector('.faq__btn');\r\n  const list = faq.querySelector('.faq__list');\r\n\r\n  btn.addEventListener('click', ev => {\r\n    list.classList.add('_opened');\r\n    btn.setAttribute('disabled', '');\r\n  })\r\n}\r\n\r\nif (testim) {\r\n  const sliders = testim.querySelectorAll('.testim__slider');\r\n\r\n  sliders.forEach(sliderSelector => {\r\n    const btns = sliderSelector.querySelectorAll('.testim__slider-btn');\r\n    let slider = new Swiper(sliderSelector.querySelector('.swiper'), {\r\n      direction: 'horizontal',\r\n      slidesPerView: 1,\r\n      spaceBetween: 40,\r\n      allowTouchMove: false,\r\n      loop: true,\r\n  \r\n      breakpoints: {\r\n        1420: {\r\n          slidesPerView: 3,\r\n          spaceBetween: 60,\r\n        }\r\n      },\r\n\r\n      navigation: {\r\n        prevEl: btns[0],\r\n        nextEl: btns[1]\r\n      }\r\n    });\r\n  });\r\n}"],"names":[],"sourceRoot":""}